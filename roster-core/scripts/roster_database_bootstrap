#!/usr/bin/python

# Copyright (c) 2009, Purdue University
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
# 
# Neither the name of the Purdue University nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

"""This script bootstraps the database so that the Roster core APIs can be used.
"""

__copyright__ = 'Copyright (C) 2009, Purdue University'
__license__ = 'BSD'
__version__ = '#TRUNK#'


import sys
import os
import MySQLdb
import MySQLdb.cursors
from optparse import OptionParser
import ConfigParser
import getpass
import roster_server


SCHEMA_LOCATION = '/usr/share/roster/database_schema.sql'
SCHEMA_FILE = (
    '# Copyright (c) 2009, Purdue University\n'
    '# All rights reserved.\n'
    '# \n'
    '# Redistribution and use in source and binary forms, with or without\n'
    '# modification, are permitted provided that the following conditions are met:\n'
    '# \n'
    '# Redistributions of source code must retain the above copyright notice, this\n'
    '# list of conditions and the following disclaimer.\n'
    '#\n'
    '# Redistributions in binary form must reproduce the above copyright notice, this\n'
    '# list of conditions and the following disclaimer in the documentation and/or\n'
    '# other materials provided with the distribution.\n'
    '# \n'
    '# Neither the name of the Purdue University nor the names of its contributors\n'
    '# may be used to endorse or promote products derived from this software without\n'
    '# specific prior written permission.\n'
    '# \n'
    '# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS '
    '"AS IS"\n'
    '# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, '
    'THE\n'
    '# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR '
    'PURPOSE ARE\n'
    '# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE '
    'LIABLE\n'
    '# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR '
    'CONSEQUENTIAL\n'
    '# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS '
    'OR\n'
    '# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) '
    'HOWEVER\n'
    '# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT '
    'LIABILITY,\n'
    '# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF '
    'THE USE\n'
    '# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n'
    '\n'
    '\n'
    '#####\n'
    '# This file represents the current working schema. Any updates to the '
    'code need\n'
    '# to be represented here.\n'
    '\n'
    '########### These are commands prepare the database for our tables '
    '###########\n'
    '\n'
    'DROP TABLE IF EXISTS `audit_log`;\n'
    'DROP TABLE IF EXISTS `reserved_words`;\n'
    'DROP TABLE IF EXISTS `named_conf_global_options`;\n'
    'DROP TABLE IF EXISTS `reverse_range_zone_assignments`;\n'
    'DROP TABLE IF EXISTS `reverse_range_permissions`;\n'
    'DROP TABLE IF EXISTS `forward_zone_permissions`;\n'
    'DROP TABLE IF EXISTS `user_group_assignments`;\n'
    'DROP TABLE IF EXISTS `groups`;\n'
    'DROP TABLE IF EXISTS `dns_server_set_view_assignments`;\n'
    'DROP TABLE IF EXISTS `dns_server_set_assignments`;\n'
    'DROP TABLE IF EXISTS `dns_server_sets`;\n'
    'DROP TABLE IF EXISTS `dns_servers`;\n'
    'DROP TABLE IF EXISTS `view_dependency_assignments`;\n'
    'DROP TABLE IF EXISTS `view_acl_assignments`;\n'
    'DROP TABLE IF EXISTS `views`;\n'
    'DROP TABLE IF EXISTS `acls`;\n'
    'DROP TABLE IF EXISTS `record_arguments_records_assignments`;\n'
    'DROP TABLE IF EXISTS `records`;\n'
    'DROP TABLE IF EXISTS `zone_view_assignments`;\n'
    'DROP TABLE IF EXISTS `zone_types`;\n'
    'DROP TABLE IF EXISTS `view_dependencies`;\n'
    'DROP TABLE IF EXISTS `zones`;\n'
    'DROP TABLE IF EXISTS `credentials`;\n'
    'DROP TABLE IF EXISTS `users`;\n'
    'DROP TABLE IF EXISTS `record_arguments`;\n'
    'DROP TABLE IF EXISTS `data_types`;\n'
    'DROP TABLE IF EXISTS `record_types`;\n'
    'DROP TABLE IF EXISTS `locks`;\n'
    '\n'
    '########## Below is the database schema ##########\n'
    '\n'
    'CREATE TABLE `locks` (\n'
    '\n'
    '  `lock_id` smallint unsigned NOT NULL auto_increment,\n'
    '  `lock_name` varchar(31) UNIQUE NOT NULL,\n'
    '  `locked` tinyint(1) default \'0\',\n'
    '  `lock_last_updated` timestamp default CURRENT_TIMESTAMP\n'
    '      on update CURRENT_TIMESTAMP,\n'
    '\n'
    '  PRIMARY KEY (`lock_id`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    'CREATE TABLE `record_types` (\n'
    '\n'
    '  `record_types_id` smallint unsigned NOT NULL auto_increment,\n'
    '  `record_type` varchar(8) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`record_types_id`),\n'
    '  INDEX `record_type_1` (`record_type`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    'CREATE TABLE `data_types` (\n'
    '    \n'
    '  `data_types_id` smallint unsigned NOT NULL auto_increment,\n'
    '  `data_type` varchar(255) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`data_types_id`),\n'
    '  INDEX `data_types_1` (`data_type`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    'CREATE TABLE `record_arguments` (\n'
    '\n'
    '  `record_arguments_id` smallint unsigned NOT NULL auto_increment,\n'
    '  `record_arguments_type` varchar(8) NOT NULL,\n'
    '  `argument_name` varchar(255) NOT NULL,\n'
    '  `argument_order` smallint unsigned NOT NULL,\n'
    '  `argument_data_type` varchar(255) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`record_arguments_id`),\n'
    '  INDEX `record_arguments_type_1` (`record_arguments_type`),\n'
    '  INDEX `record_arguments_data_type_1` (`argument_data_type`),\n'
    '  INDEX `record_arguments_type_argument_1` (`record_arguments_type`,\n'
    '      `argument_name`),\n'
    '  INDEX `record_arguments_type_argument_order_1` '
    '(`record_arguments_type`,\n'
    '      `argument_name`, `argument_order`),\n'
    '\n'
    '  CONSTRAINT `unique_type_argument_order_1` UNIQUE '
    '(`record_arguments_type`,\n'
    '    `argument_name`, `argument_order`),\n'
    '  CONSTRAINT `argument_data_type_1` FOREIGN KEY (`argument_data_type`)\n'
    '    REFERENCES `data_types` (`data_type`),\n'
    '  CONSTRAINT `record_type_1` FOREIGN KEY (`record_arguments_type`) '
    'REFERENCES\n'
    '    `record_types` (`record_type`) ON DELETE CASCADE ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `users` (\n'
    '\n'
    '  `users_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `user_name` varchar(255) UNIQUE NOT NULL,\n'
    '  `access_level` smallint unsigned NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`users_id`),\n'
    '  INDEX `user_name_1` (`user_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `credentials` (\n'
    '\n'
    '  `credential_id` int unsigned NOT NULL auto_increment,\n'
    '  `credential_user_name` varchar(255) UNIQUE NOT NULL,\n'
    '  `credential` varchar(36) UNIQUE NOT NULL,\n'
    '  `last_used_timestamp` timestamp default CURRENT_TIMESTAMP\n'
    '    on update CURRENT_TIMESTAMP,\n'
    '  `infinite_cred` bool default 0,\n'
    '\n'
    '  PRIMARY KEY (`credential_id`),\n'
    '  CONSTRAINT `user_name_4` FOREIGN KEY (`credential_user_name`)\n'
    '    REFERENCES `users` (`user_name`) ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `zones` (\n'
    '\n'
    '  `zones_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `zone_name` varchar(255) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`zones_id`),\n'
    '  INDEX `zone_name_1` (`zone_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `view_dependencies` (\n'
    '\n'
    '  `view_dependencies_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `view_dependency` varchar(255) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`view_dependencies_id`),\n'
    '  INDEX `view_dependency_1` (`view_dependency`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `zone_types` (\n'
    '\n'
    '  `zone_type_id` tinyint unsigned NOT NULL auto_increment,\n'
    '  `zone_type` varchar(31) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`zone_type_id`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `zone_view_assignments` (\n'
    '\n'
    '  `zone_view_assignments_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `zone_view_assignments_zone_name` varchar(255) NOT NULL,\n'
    '  `zone_view_assignments_view_dependency` varchar(255) NOT NULL,\n'
    '  `zone_view_assignments_zone_type` varchar(31) NOT NULL,\n'
    '  `zone_origin` varchar(255) NOT NULL,\n'
    '  `zone_options` longtext,\n'
    '\n'
    '  PRIMARY KEY (`zone_view_assignments_id`),\n'
    '  INDEX `zone_name` (`zone_view_assignments_zone_name`,\n'
    '                   `zone_view_assignments_view_dependency`),\n'
    '  INDEX `view_dependency_3` (`zone_view_assignments_view_dependency`),\n'
    '\n'
    '  CONSTRAINT `zone_type_1` FOREIGN KEY '
    '(`zone_view_assignments_zone_type`)\n'
    '     REFERENCES `zone_types` (`zone_type`),\n'
    '  CONSTRAINT `zone_name_3` FOREIGN KEY '
    '(`zone_view_assignments_zone_name`)\n'
    '    REFERENCES `zones` (`zone_name`) ON DELETE CASCADE ON UPDATE '
    'CASCADE,\n'
    '  CONSTRAINT `view_dependency_3` FOREIGN KEY\n'
    '    (`zone_view_assignments_view_dependency`) REFERENCES '
    '`view_dependencies`\n'
    '    (`view_dependency`) ON DELETE CASCADE ON UPDATE CASCADE,\n'
    '  CONSTRAINT `unique_zone_name_zone_dependency` UNIQUE\n'
    '    (`zone_view_assignments_zone_name`,'
    '`zone_view_assignments_view_dependency`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `records` (\n'
    '\n'
    '  `records_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `record_type` varchar(8) NOT NULL,\n'
    '  `record_target` varchar(255) NOT NULL,\n'
    '  `record_ttl` mediumint unsigned default NULL,\n'
    '  `record_zone_name` varchar(255) NOT NULL,\n'
    '  `record_view_dependency` varchar(255) NOT NULL,\n'
    '  `record_last_updated` timestamp NOT NULL default CURRENT_TIMESTAMP '
    'on update\n'
    '    CURRENT_TIMESTAMP,\n'
    '  `record_last_user` varchar(255) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`records_id`),\n'
    '  INDEX `record_type_id_1` (`records_id`, `record_type`),\n'
    '  INDEX `record_type_1` (`record_type`),\n'
    '  INDEX `user_name_1` (`record_last_user`),\n'
    '  INDEX `record_target_1` (`record_target`),\n'
    '\n'
    '  CONSTRAINT `record_type_2` FOREIGN KEY (`record_type`) REFERENCES\n'
    '    `record_types` (`record_type`),\n'
    '  CONSTRAINT `user_name_1` FOREIGN KEY (`record_last_user`) REFERENCES '
    '`users`\n'
    '    (`user_name`),\n'
    '  CONSTRAINT `zone_name_view_dependency_1` FOREIGN KEY '
    '(`record_zone_name`,\n'
    '    `record_view_dependency`) REFERENCES `zone_view_assignments`\n'
    '    (`zone_view_assignments_zone_name`, '
    '`zone_view_assignments_view_dependency`)\n'
    '    ON DELETE CASCADE ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `record_arguments_records_assignments` (\n'
    '\n'
    '  `record_arguments_records_assignments_id` mediumint unsigned NOT NULL\n'
    '    auto_increment,\n'
    '  `record_arguments_records_assignments_record_id` mediumint unsigned \n'
    '    NOT NULL,\n'
    '  `record_arguments_records_assignments_type` varchar(8) NOT NULL,\n'
    '  `record_arguments_records_assignments_argument_name` varchar(255) '
    'NOT NULL,\n'
    '  `argument_value` varchar(1022) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`record_arguments_records_assignments_id`),\n'
    '  INDEX `argument_value_1` (`argument_value`(15)),\n'
    '  INDEX `record_arguments_records_assignments_record_id_1`\n'
    '    (`record_arguments_records_assignments_record_id`),\n'
    '  INDEX `record_arguments_records_assignments_type_1`\n'
    '    (`record_arguments_records_assignments_type`),\n'
    '  INDEX `record_arguments_record_assignments_id_argument_1`\n'
    '    (`record_arguments_records_assignments_record_id`,\n'
    '      `record_arguments_records_assignments_argument_name`),\n'
    '\n'
    '  CONSTRAINT `record_id_record_type_1` FOREIGN KEY\n'
    '    (`record_arguments_records_assignments_record_id`,\n'
    '      `record_arguments_records_assignments_type`) REFERENCES `records`\n'
    '    (`records_id`, `record_type`) ON DELETE CASCADE ON UPDATE CASCADE,\n'
    '  CONSTRAINT `argument_record_type_1` FOREIGN KEY\n'
    '    (`record_arguments_records_assignments_type`,\n'
    '      `record_arguments_records_assignments_argument_name`) REFERENCES\n'
    '    `record_arguments` (`record_arguments_type`, `argument_name`),\n'
    '  CONSTRAINT `unique_record_arguments_records_assignments` UNIQUE\n'
    '    (`record_arguments_records_assignments_record_id`,\n'
    '      `record_arguments_records_assignments_argument_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `acls` (\n'
    '\n'
    '  `acl_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `acl_name` varchar(255) NOT NULL,\n'
    '  `acl_range_allowed` boolean,\n'
    '  `acl_cidr_block` varchar(43),\n'
    '\n'
    '  PRIMARY KEY (`acl_id`),\n'
    '  INDEX `acl_name_1` (`acl_name`),\n'
    '\n'
    '  CONSTRAINT `acl_name_cidr_block_1` UNIQUE (`acl_name`, '
    '`acl_cidr_block`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `views` (\n'
    '\n'
    '  `view_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `view_name` varchar(255) UNIQUE NOT NULL,\n'
    '  `view_options` longtext,\n'
    '\n'
    '  PRIMARY KEY (`view_id`),\n'
    '  INDEX `view_name_1` (`view_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `view_acl_assignments` (\n'
    '\n'
    '  `view_acl_assignments_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `view_acl_assignments_view_name` varchar(255) NOT NULL,\n'
    '  `view_acl_assignments_acl_name` varchar(255) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`view_acl_assignments_id`),\n'
    '\n'
    '  CONSTRAINT `acl_name_1` FOREIGN KEY (`view_acl_assignments_acl_name`)\n'
    '    REFERENCES `acls` (`acl_name`) ON DELETE CASCADE ON UPDATE CASCADE,\n'
    '  CONSTRAINT `view_name_2` FOREIGN KEY '
    '(`view_acl_assignments_view_name`)\n'
    '    REFERENCES `views` (`view_name`) ON DELETE CASCADE ON UPDATE '
    'CASCADE,\n'
    '\n'
    '  CONSTRAINT `acl_name_view_name_1` UNIQUE '
    '(`view_acl_assignments_acl_name`,\n'
    '    `view_acl_assignments_view_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `view_dependency_assignments` (\n'
    '\n'
    '  `view_dependency_assignments_id` mediumint unsigned NOT NULL '
    'auto_increment,\n'
    '  `view_dependency_assignments_view_name` varchar(255) NOT NULL,\n'
    '  `view_dependency_assignments_view_dependency` varchar(255) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`view_dependency_assignments_id`),\n'
    '  INDEX `view_name_1` (`view_dependency_assignments_view_name`),\n'
    '  INDEX `view_dependency_4` '
    '(`view_dependency_assignments_view_dependency`),\n'
    '\n'
    '  CONSTRAINT `view_name_1` FOREIGN KEY '
    '(`view_dependency_assignments_view_name`)\n'
    '    REFERENCES `views` (`view_name`) ON DELETE CASCADE ON UPDATE CASCADE,\n'
    '  CONSTRAINT `view_dependency_assignments_unique_1` UNIQUE\n'
    '    (`view_dependency_assignments_view_name`,\n'
    '      `view_dependency_assignments_view_dependency`),\n'
    '  CONSTRAINT `view_dependency_4` FOREIGN KEY \n'
    '    (`view_dependency_assignments_view_dependency`) REFERENCES\n'
    '      `view_dependencies` (`view_dependency`) ON DELETE CASCADE\n'
    '    ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `dns_servers` (\n'
    '    \n'
    '  `dns_server_id` smallint unsigned NOT NULL auto_increment,\n'
    '  `dns_server_name` varchar(255) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`dns_server_id`),\n'
    '  INDEX `dns_server_1` (`dns_server_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `dns_server_sets` (\n'
    '    \n'
    '  `dns_server_set_id` smallint unsigned NOT NULL auto_increment,\n'
    '  `dns_server_set_name` varchar(255) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`dns_server_set_id`),\n'
    '  INDEX `dns_server_set_1` (`dns_server_set_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `dns_server_set_assignments` (\n'
    '  `dns_server_set_assignments_id` smallint unsigned NOT NULL '
    'auto_increment,\n'
    '  `dns_server_set_assignments_dns_server_name` varchar(255) NOT NULL,\n'
    '  `dns_server_set_assignments_dns_server_set_name` varchar(255) NOT '
    'NULL,\n'
    '\n'
    '  PRIMARY KEY (`dns_server_set_assignments_id`),\n'
    '\n'
    '  CONSTRAINT `dns_server_1` FOREIGN KEY \n'
    '    (`dns_server_set_assignments_dns_server_name`) REFERENCES '
    '`dns_servers` \n'
    '    (`dns_server_name`) ON DELETE CASCADE ON UPDATE CASCADE,\n'
    '  CONSTRAINT `dns_server_set_1` FOREIGN KEY \n'
    '    (`dns_server_set_assignments_dns_server_set_name`) REFERENCES\n'
    '    `dns_server_sets` (`dns_server_set_name`) ON DELETE CASCADE \n'
    '    ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `dns_server_set_view_assignments` (\n'
    '  `dns_server_set_view_assignments_id` smallint unsigned NOT NULL\n'
    '      auto_increment,\n'
    '  `dns_server_set_view_assignments_dns_server_set_name` varchar(255) \n'
    '      NOT NULL,\n'
    '  `dns_server_set_view_assignments_view_name` varchar(255) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`dns_server_set_view_assignments_id`),\n'
    '\n'
    '  CONSTRAINT `view_name_3` FOREIGN KEY \n'
    '    (`dns_server_set_view_assignments_view_name`) REFERENCES `views` \n'
    '    (`view_name`) ON DELETE CASCADE ON UPDATE CASCADE,\n'
    '  CONSTRAINT `dns_server_set_2` FOREIGN KEY \n'
    '    (`dns_server_set_view_assignments_dns_server_set_name`) REFERENCES \n'
    '    `dns_server_sets` (`dns_server_set_name`) ON DELETE CASCADE \n'
    '    ON UPDATE CASCADE,\n'
    '  CONSTRAINT `dns_server_set_view_assignments_unique_1` UNIQUE\n'
    '    (`dns_server_set_view_assignments_dns_server_set_name`,\n'
    '     `dns_server_set_view_assignments_view_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `groups` (\n'
    '\n'
    '  `group_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `group_name` varchar(255) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`group_id`),\n'
    '  INDEX `group_name_1` (`group_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `user_group_assignments` (\n'
    '\n'
    '  `user_group_assignments_id` mediumint unsigned NOT NULL '
    'auto_increment,\n'
    '  `user_group_assignments_group_name` varchar(255) NOT NULL,\n'
    '  `user_group_assignments_user_name` varchar(255) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`user_group_assignments_id`),\n'
    '  INDEX `group_name_1` (`user_group_assignments_group_name`),\n'
    '  INDEX `user_name_2` (`user_group_assignments_user_name`),\n'
    '\n'
    '  CONSTRAINT `group_name_1` FOREIGN KEY '
    '(`user_group_assignments_group_name`)\n'
    '    REFERENCES `groups` (`group_name`) ON DELETE CASCADE ON UPDATE '
    'CASCADE,\n'
    '  CONSTRAINT `user_group_assignments_unique_1` UNIQUE\n'
    '    (`user_group_assignments_group_name`, '
    '`user_group_assignments_user_name`),\n'
    '  CONSTRAINT `user_name_2` FOREIGN KEY '
    '(`user_group_assignments_user_name`)\n'
    '    REFERENCES `users` (`user_name`) ON DELETE CASCADE ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `forward_zone_permissions` (\n'
    '\n'
    '  `forward_zone_permissions_id` mediumint unsigned NOT NULL '
    'auto_increment,\n'
    '  `forward_zone_permissions_group_name` varchar(255) NOT NULL,\n'
    '  `forward_zone_permissions_zone_name` varchar(255) NOT NULL,\n'
    '  `forward_zone_permissions_access_right` varchar(4) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`forward_zone_permissions_id`),\n'
    '  INDEX `group_name_2` (`forward_zone_permissions_group_name`),\n'
    '  INDEX `zone_name_4` (`forward_zone_permissions_zone_name`),\n'
    '  INDEX `access_right_1` (`forward_zone_permissions_access_right`),\n'
    '\n'
    '  CONSTRAINT `group_name_2` FOREIGN KEY '
    '(`forward_zone_permissions_group_name`)\n'
    '    REFERENCES `groups` (`group_name`) ON DELETE CASCADE ON UPDATE '
    'CASCADE,\n'
    '  CONSTRAINT `zone_name_4` FOREIGN KEY '
    '(`forward_zone_permissions_zone_name`)\n'
    '    REFERENCES `zones` (`zone_name`) ON DELETE CASCADE ON UPDATE '
    'CASCADE,\n'
    '  CONSTRAINT `forward_zone_permissions_unique_1` UNIQUE\n'
    '    (`forward_zone_permissions_group_name`,\n'
    '      `forward_zone_permissions_zone_name`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '\n'
    'CREATE TABLE `reverse_range_permissions` (\n'
    '\n'
    '  `reverse_range_permissions_id` mediumint unsigned NOT NULL '
    'auto_increment,\n'
    '  `reverse_range_permissions_group_name` varchar(255) NOT NULL,\n'
    '  `reverse_range_permissions_cidr_block` varchar(43) NOT NULL,\n'
    '  `reverse_range_permissions_access_right` varchar(4) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`reverse_range_permissions_id`),\n'
    '  INDEX `group_name_3` (`reverse_range_permissions_group_name`),\n'
    '  INDEX `access_right_2` (`reverse_range_permissions_access_right`),\n'
    '\n'
    '  CONSTRAINT `group_name_3` FOREIGN KEY '
    '(`reverse_range_permissions_group_name`)\n'
    '    REFERENCES `groups` (`group_name`) ON DELETE CASCADE ON UPDATE '
    'CASCADE,\n'
    '  CONSTRAINT `reverse_range_permissions_unique_1` UNIQUE\n'
    '    (`reverse_range_permissions_group_name`,\n'
    '     `reverse_range_permissions_cidr_block`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    'CREATE TABLE `reverse_range_zone_assignments` (\n'
    '\n'
    '  `reverse_range_zone_assignments_id` mediumint unsigned NOT NULL \n'
    '      auto_increment,\n'
    '  `reverse_range_zone_assignments_zone_name` varchar(255) NOT NULL,\n'
    '  `reverse_range_zone_assignments_cidr_block` varchar(43) NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`reverse_range_zone_assignments_id`),\n'
    '  INDEX `zone_name_5` (`reverse_range_zone_assignments_zone_name`),\n'
    '\n'
    '  CONSTRAINT `reverse_range_zone_assignments_unique_1` UNIQUE\n'
    '    (`reverse_range_zone_assignments_zone_name`,\n'
    '     `reverse_range_zone_assignments_cidr_block`),\n'
    '  CONSTRAINT `zone_name_5` FOREIGN KEY \n'
    '    (`reverse_range_zone_assignments_zone_name`) REFERENCES `zones` \n'
    '    (`zone_name`) ON DELETE CASCADE ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    'CREATE TABLE `named_conf_global_options` (\n'
    '\n'
    '  `named_conf_global_options_id` mediumint unsigned NOT NULL '
    'auto_increment,\n'
    '  `global_options` longtext NOT NULL,\n'
    '  `named_conf_global_options_dns_server_set_name` varchar(255) NOT NULL,\n'
    '  `options_created` timestamp NOT NULL default CURRENT_TIMESTAMP,\n'
    '\n'
    '  PRIMARY KEY (`named_conf_global_options_id`),\n'
    '\n'
    '  CONSTRAINT `dns_server_set_3` FOREIGN KEY \n'
    '    (`named_conf_global_options_dns_server_set_name`) REFERENCES\n'
    '    `dns_server_sets` (`dns_server_set_name`) ON DELETE CASCADE \n'
    '    ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    'CREATE TABLE `reserved_words` (\n'
    '\n'
    '  `reserved_word_id` mediumint unsigned NOT NULL auto_increment,\n'
    '  `reserved_word` varchar(255) UNIQUE NOT NULL,\n'
    '\n'
    '  PRIMARY KEY (`reserved_word_id`)\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    'CREATE TABLE `audit_log` (\n'
    '\n'
    '  `audit_log_id` bigint unsigned NOT NULL auto_increment,\n'
    '  `audit_log_user_name` varchar(255) NOT NULL,\n'
    '  `action` varchar(255) NOT NULL,\n'
    '  `data` text NOT NULL,\n'
    '  `success` boolean NOT NULL,\n'
    '  `audit_log_timestamp` timestamp NOT NULL default CURRENT_TIMESTAMP,\n'
    '\n'
    '  PRIMARY KEY (`audit_log_id`),\n'
    '\n'
    '  CONSTRAINT `user_name_3` FOREIGN KEY (`audit_log_user_name`)\n'
    '    REFERENCES `users` (`user_name`) ON UPDATE CASCADE\n'
    '\n'
    ') ENGINE=InnoDB DEFAULT CHARSET=utf8;\n'
    '\n'
    '##########\n'
    '# Things that are expected in the db that are not schema.\n'
    '##########\n'
    '\n'
    'INSERT INTO locks (lock_name) VALUES (\'db_lock_lock\');\n'
    '\n'
    'INSERT INTO view_dependencies (view_dependency) VALUES (\'any\');\n'
    'INSERT INTO zone_types (zone_type) VALUES (\'master\'),(\'slave\'),'
    '(\'forward\');\n'
    'INSERT INTO data_types (data_type) VALUES (\'UnicodeString\'),'
    '(\'AccessRight\'),\n'
    '                                          (\'AccessLevel\'),'
    '(\'CIDRBlock\'),\n'
    '                                          (\'IntBool\'),'
    '(\'UnsignedInt\'),\n'
    '                                          (\'Hostname\'),'
    '(\'DateTime\'),\n'
    '                                          (\'IPv4IPAddress\'),'
    '(\'IPv6IPAddress\');\n'
    'INSERT INTO record_types (record_type) VALUES (\'a\'),(\'hinfo\'),'
    '(\'cname\'),\n'
    '                                              (\'soa\'),(\'mx\'),(\'ns\'),'
    '(\'aaaa\'),\n'
    '                                              (\'txt\'),(\'srv\'),'
    '(\'ptr\');\n'
    'INSERT INTO record_arguments (record_arguments_type, argument_name,\n'
    '                              argument_order, argument_data_type) VALUES\n'
    '    (\'a\', \'assignment_ip\', \'0\', \'IPv4IPAddress\'),\n'
    '    (\'aaaa\', \'assignment_ip\', \'0\', \'IPv6IPAddress\'),\n'
    '    (\'hinfo\', \'hardware\', \'0\', \'UnicodeString\'),\n'
    '    (\'hinfo\', \'os\', \'1\', \'UnicodeString\'),\n'
    '    (\'txt\', \'quoted_text\', \'0\', \'UnicodeString\'),\n'
    '    (\'cname\', \'assignment_host\', \'0\', \'Hostname\'),\n'
    '    (\'soa\', \'name_server\', \'0\', \'Hostname\'),\n'
    '    # An email address in this context looks exactly like a valid '
    'hostname\n'
    '    (\'soa\', \'admin_email\', \'1\', \'Hostname\'),\n'
    '    (\'soa\', \'serial_number\', \'2\', \'UnsignedInt\'),\n'
    '    (\'soa\', \'refresh_seconds\', \'3\', \'UnsignedInt\'),\n'
    '    (\'soa\', \'retry_seconds\', \'4\', \'UnsignedInt\'),\n'
    '    (\'soa\', \'expiry_seconds\', \'5\', \'UnsignedInt\'),\n'
    '    (\'soa\', \'minimum_seconds\', \'6\', \'UnsignedInt\'),\n'
    '    (\'srv\', \'priority\', \'0\', \'UnsignedInt\'),\n'
    '    (\'srv\', \'weight\', \'1\', \'UnsignedInt\'),\n'
    '    (\'srv\', \'port\', \'2\', \'UnsignedInt\'),\n'
    '    (\'srv\', \'assignment_host\', \'3\', \'Hostname\'),\n'
    '    (\'ns\', \'name_server\', \'0\', \'Hostname\'),\n'
    '    (\'mx\', \'priority\', \'0\', \'UnsignedInt\'),\n'
    '    (\'mx\', \'mail_server\', \'1\', \'Hostname\'),\n'
    '    (\'ptr\', \'assignment_host\', \'0\', \'Hostname\');\n'
    '\n'
    '# code always expects reserved_words to be populated\n'
    'INSERT INTO reserved_words (reserved_word) VALUES (\'damn\');\n'
    '\n'
    '# make acl any keyword for named.conf\n'
    'INSERT INTO acls (acl_name, acl_range_allowed) VALUES (\'any\', 1);\n')

INIT_LOCATION = '/etc/init.d/rosterd'
INIT_FILE = (
    '#!/bin/sh\n'
    '# Copyright (c) 2009, Purdue University\n'
    '# All rights reserved.\n'
    '# \n'
    '# Redistribution and use in source and binary forms, with or without\n'
    '# modification, are permitted provided that the following conditions are '
    'met:\n'
    '# \n'
    '# Redistributions of source code must retain the above copyright notice, '
    'this\n'
    '# list of conditions and the following disclaimer.\n'
    '#\n'
    '# Redistributions in binary form must reproduce the above copyright '
    'notice, this\n'
    '# list of conditions and the following disclaimer in the documentation '
    'and/or\n'
    '# other materials provided with the distribution.\n'
    '# \n'
    '# Neither the name of the Purdue University nor the names of its '
    'contributors\n'
    '# may be used to endorse or promote products derived from this software '
    'without\n'
    '# specific prior written permission.\n'
    '# \n'
    '# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS '
    '"AS IS"\n'
    '# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, '
    'THE\n'
    '# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR '
    'PURPOSE ARE\n'
    '# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE '
    'LIABLE\n'
    '# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR '
    'CONSEQUENTIAL\n'
    '# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE '
    'GOODS OR\n'
    '# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) '
    'HOWEVER\n'
    '# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT '
    'LIABILITY,\n'
    '# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF '
    'THE USE\n'
    '# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n'
    '\n'
    'lockfile=/var/lock/roster\n'
    '\n'
    'start_roster()\n'
    '{\n'
    '  echo "Starting Roster Server..."\n'
    '  rosterd &\n'
    '}\n'
    'stop_roster()\n'
    '{\n'
    '  if [ -e $lockfile ]\n'
    '  then\n'
    '    if [ -w $lockfile ]\n'
    '    then\n'
    '      echo "Stopping Roster Server..."\n'
    '      rm $lockfile\n'
    '    else\n'
    '      echo "Could not stop Roster Server. Do you have correct '
    'permissions?"\n'
    '      exit 1\n'
    '    fi\n'
    '  else\n'
    '    echo "Could not find lock file. Is Roster Server running?"\n'
    '    exit 1\n'
    '  fi\n'
    '}\n'
    '\n'
    'case "$1" in\n'
    '  start)\n'
    '    start_roster\n'
    '    ;;\n'
    '  stop)\n'
    '    stop_roster\n'
    '    ;;\n'
    '  restart)\n'
    '    stop_roster\n'
    '    sleep 2\n'
    '    start_roster\n'
    '    ;;\n'
    '  *)\n'
    '   echo "Usage $1 {start|stop|restart}"\n'
    '   exit 1\n'
    '   ;;\n'
    'esac\n')

def main(args):
  """Collects command line arguments. Sets up initial parameters.

  Inputs:
    args: arguments from the command line
  """
  parser = OptionParser()

  parser.add_option('-c', '--config-file', action='store', dest='config_file',
                    help='Location of the new config file.',
                    metavar='<config-file>',
                    default='/etc/roster/roster_server.conf')
  parser.add_option('-s', '--schema-file', action='store', dest='schema_file',
                    help='Location of the database schema file.',
                    metavar='<schema-file>',
                    default=None)
  parser.add_option('-u', '--user-name', action='store', dest='user_name',
                    help='MySQL username.', metavar='<user-name>',
                    default=None)
  parser.add_option('-U', '--roster-user-name', action='store',
                    dest='roster_user_name',
                    help='Initial admin username for roster.',
                    default=None)
  parser.add_option('-l', '--ldap-server', action='store', dest='ldap_server',
                    help='URL of ldap server to authenticate with.',
                    metavar='<ldap-server>', default=None)
  parser.add_option('--infinite-renew-time', action='store',
                    dest='infinite_renew_time', metavar='<time>',
                    help='Time in seconds to renew infinite credentials.',
                    default='43200')
  parser.add_option('--core-die-time', action='store', dest='core_die_time',
                    help='Time in seconds that a core instance will die.',
                    metavar='<time>', default='1200')
  parser.add_option('--get-credentials-wait-increment', action='store',
                    dest='get_credentials_wait_increment', metavar='<int>',
                    help='Seconds to add wait with incorrect password.',
                    default='1')
  parser.add_option('-b', '--binddn', action='store', dest='binddn',
                    help='Binddn for ldap server.', metavar='<binddn>',
                    default=None)
  parser.add_option('--credential-expiry-time', action='store',
                    dest='credential_expiry_time', metavar='<time>',
                    help='Time in seconds for credentials to expire.',
                    default='3600')
  parser.add_option('-d', '--database', action='store', dest='database',
                    help='MySQL database name.', metavar='<database>',
                    default=None)
  parser.add_option('-n', '--hostname', action='store', dest='hostname',
                    help='MySQL database hostname.', metavar='<hostname>',
                    default='localhost')
  parser.add_option('--big-lock-timeout', action='store',
                    dest='big_lock_timeout', metavar='<seconds>',
                    help='Timeout for big database lock.', default='90')
  parser.add_option('--big-lock-wait', action='store',
                    dest='big_lock_wait', metavar='<seconds>',
                    help='Wait for big database lock.', default='5')

  (globals()["options"], args) = parser.parse_args(args)

  if( os.getuid() != 0 ):
    print '%s: Need to be root.' % sys.argv[0]
    sys.exit(1)

  args_dict = {'-c/--config-file': options.config_file,
               '-s/--schema-file': options.schema_file,
               '-u/--user-name': options.user_name,
               '-U/--roster-user-name': options.roster_user_name,
               '-l/--ldap-server': options.ldap_server,
               '-b/--binddn': options.binddn,
               '-d/--database': options.database,
               '-n/--hostname': options.hostname}

  error = False
  for arg in args_dict:
    if( args_dict[arg] is None ):
      print 'ERROR: %s must be specified.' % arg
      error = True
  if( error ):
    parser.print_help()
    sys.exit(1)

  module_list = []
  for module in dir(roster_server):
    if( module.startswith('_') ):
      continue
    module_object = getattr(roster_server, module)
    if( 'AuthenticationMethod' in dir(module_object) ):
      module_list.append(module)

  for module in module_list:
    print "%s. %s" % (module_list.index(module) + 1, module)
  module = raw_input('Please select an authentication module (1 - %s) '
                     'above: ' % len(module_list))
  module = int(module) - 1

  authentication_module = getattr(roster_server, module_list[module])
  authentication_module_instance = authentication_module.AuthenticationMethod()

  password = getpass.getpass('Enter password for %s: ' % options.user_name)
  config_parser = ConfigParser.SafeConfigParser()
  config_parser.add_section('database')
  config_parser.set('database', 'server', options.hostname)
  config_parser.set('database', 'login', options.user_name)
  config_parser.set('database', 'database', options.database)
  config_parser.set('database', 'passwd', password)
  config_parser.set('database', 'big_lock_timeout', options.big_lock_timeout)
  config_parser.set('database', 'big_lock_wait', options.big_lock_wait)

  config_parser.add_section('server')
  config_parser.set('server', 'inf_renew_time', options.infinite_renew_time)
  config_parser.set('server', 'core_die_time', options.core_die_time)
  config_parser.set('server', 'get_credentials_wait_increment',
                    options.get_credentials_wait_increment)
  config_parser.set('server', 'ldap_server', options.ldap_server)
  config_parser.set('server', 'server_killswitch', 'on')

  config_parser.add_section('credentials')
  config_parser.set('credentials', 'authentication_method', module_list[module])
  config_parser.set('credentials', 'exp_time', options.credential_expiry_time)
  config_parser_file = open(options.config_file, 'wb')

  config_parser.add_section(module_list[module])
  for variable in authentication_module_instance.requires:
    if( authentication_module_instance.requires[variable]['default'] is None ):
      value = raw_input('Please enter \'%s\' for \'%s\': ' % (
          variable, module_list[module]))
    else:
      value = authentication_module_instance.requires[variable]['default']
    config_parser.set(module_list[module], variable, value)

  config_parser.write(config_parser_file)

  new_user_mysql = (
      'INSERT INTO users (user_name, access_level) VALUES ("%s", 128)' % (
          options.roster_user_name))

  connection = MySQLdb.connect(host=options.hostname, user=options.user_name,
                               passwd=password, db=options.database,
                               use_unicode=True)
  cursor = connection.cursor(MySQLdb.cursors.DictCursor)
  schema = open(options.schema_file, 'r').read()
  try:
    cursor.execute(schema)
  finally:
    cursor.close()
    connection.commit()

  cursor = connection.cursor()
  try:
    cursor.execute(new_user_mysql)
  finally:
    cursor.close()
    connection.commit()

  init_file = open(INIT_LOCATION, 'w')
  try:
    init_file.writelines(INIT_FILE)
  finally:
    init_file.close()

  schema_file = open(SCHEMA_LOCATION, 'w')
  try:
    schema_file.writelines(SCHEMA_FILE)
  finally:
    schema_file.close()

if __name__ == '__main__':
  main(sys.argv[1:])
